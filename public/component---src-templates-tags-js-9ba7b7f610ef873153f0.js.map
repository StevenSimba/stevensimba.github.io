{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","className","to","map","node","frontmatter","title","date","slug","fields","key","pageQuery"],"mappings":"0FAAA,sFAuCeA,UAnCF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,kBAA3BC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAGf,OACE,kBAAC,IAAD,KACE,yBAAKK,UAAU,aACb,4BAAKD,GACJ,kBAAC,OAAD,CAAME,GAAG,SAAT,cACD,wBAAID,UAAU,YACXH,EAAMK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAAW,EACCA,EAAKC,YAArBC,EADe,EACfA,MAAOC,EADQ,EACRA,KACPC,EAASJ,EAAKK,OAAdD,KACR,OAAQ,oCACN,0BAAME,IAAKF,GACT,kBAAC,OAAD,CAAMN,GAAIM,GACPF,GAEH,+BAAO,oCAAUC,KAEnB,kCAKN,kCAUD,IAAMI,EAAS","file":"component---src-templates-tags-js-9ba7b7f610ef873153f0.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../components/layout';\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n  } tagged with \"${tag}\"`;\n  return (\n    <Layout>\n      <div className=\"blog-tags\">\n        <h1>{tagHeader}</h1>\n         <Link to=\"/tags\">‚Üê All tags</Link>\n        <ul className=\"tag-list\">\n          {edges.map(({ node }) => {\n            const { title, date } = node.frontmatter;\n            const { slug } = node.fields;\n            return (<>\n              <span key={slug}>\n                <Link to={slug}>\n                  {title}\n                </Link>\n                <small><span> | {date}</span></small>\n              </span>\n              <br />\n              </>\n            );\n          })}\n        </ul>\n        <span>\n         \n        </span>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}